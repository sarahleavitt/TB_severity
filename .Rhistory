#Sarah V. Leavitt
#Boston University
#Pre-chemotherapy TB Analysis
##########################################################################################
# This program performs the mortality Bayesian meta-analysis for the US pre-1930s studies
# It takes about 6 minutes to run
##########################################################################################
options(scipen=999)
options(digits = 10)
set.seed(150183)
rm(list = ls())
source("R/utils.R")
setwd("~/Boston University/Duration_of_Infectiousness/pre_chemo_tb")
setwd("~/Boston University/Duration_of_Infectiousness/TB_severity")
#Sarah V. Leavitt
#Boston University
#Pre-chemotherapy TB Analysis
##########################################################################################
# This program performs the mortality Bayesian meta-analysis for the US pre-1930s studies
# It takes about 6 minutes to run
##########################################################################################
options(scipen=999)
options(digits = 10)
set.seed(150183)
rm(list = ls())
source("R/utils.R")
reload_source()
source("R/mortality_functions.R")
#Reading in individual mortality data
mortality <- read.csv("data/mortality_data.csv")
#### Set-up ----------------------------------------------------------------------------------------
#Creating interval variables
#interval = 1 implies x1 < t <= x2
#dinterval() isn't working as it should so make all obs have interval = 1
#and set x2 to be 10000 (close enough to infinity) for right censored
mortality <- mortality %>%
mutate(time = ifelse(death_tb == 0, NA, interval_l),
interval = 1,
x1 = interval_l,
x2 = ifelse(death_tb == 0, 10000, interval_r))
n.iter <- 31000
n.burnin <- 1000
n.thin <- 30
# n.iter <- 100
# n.burnin <- 10
# n.thin <- 1
#### Running Models --------------------------------------------------------------------------------
#### US Studies: Complete Model ####
#Subsetting and formatting data
mortality_comp_pre <- mortality %>%
filter(study_id %in% c("63", "67", "90_1016")) %>%
mutate(study_sev_num = as.numeric(factor(study_sev)),
study_id_num = as.numeric(factor(study_id)))
#Running model
output_comp_pre <- run_comp(mortality_comp_pre,
n.iter = n.iter, n.burnin = n.burnin, n.thin = n.thin)
#### US Studies: Stratified Model ####
#Subsetting and formatting data
mortality_sev_pre <- mortality %>%
filter(study_id %in% c("63", "67", "90_1016"),
severity != "Unknown") %>%
mutate(study_sev_num = as.numeric(factor(study_sev)),
study_id_num = as.numeric(factor(study_id)),
sev_mod = as.numeric(severity == "Moderate"),
sev_adv = as.numeric(severity == "Advanced"),
sev_unk = as.numeric(severity == "Unknown"))
#Running model
output_sev_pre <- run_sev(mortality_sev_pre,
n.iter = n.iter, n.burnin = n.burnin, n.thin = n.thin)
#### Saving Results------------------------------------------------------------------------------
data_comp_pre <- getData(mortality_comp_pre)
data_sev_pre <- getData(mortality_sev_pre)
res_comp_pre <- output_comp_pre$res
res_sev_pre <- output_sev_pre$res
eval_comp_pre <- output_comp_pre$eval
eval_sev_pre <- output_sev_pre$eval
save(res_comp_pre, res_sev_pre, eval_comp_pre, eval_sev_pre, data_comp_pre, data_sev_pre,
file = "R/bayesian_pre.RData")
#Sarah V. Leavitt
#Boston University
#Pre-chemotherapy TB Severity Analysis
##############################################################################
# This program creates figures and tables of the severity mortality analysis
# with the results
##############################################################################
options(scipen=999)
options(digits = 10)
rm(list = ls())
source("R/utils.R")
reload_source()
#Reading in the study_id correspondence table
studyid <- read.csv("data/study_id.csv")
#Reading in individual mortality data and analysis results
mortality <- read.csv("data/mortality_data.csv")
load('R/bayesian_pre.RData')
#### Table of Main Results -------------------------------------------------------------------------
#Combining raw tables from results lists
raw_tab <- bind_rows(form_comp_pre$param, form_sev_pre$param)
load('R/bayesian_pre.RData')
#### Formatting results ----------------------------------------------------------------------------
form_comp_pre <- formatBayesian(mortality, res_comp_pre, data_comp_pre, "Combined_pre")
form_sev_pre <- formatBayesian(mortality, res_sev_pre, data_sev_pre, "Severity_pre", fixed = TRUE)
load('R/bayesian_pre.RData')
#### Formatting results ----------------------------------------------------------------------------
form_comp_pre <- formatBayesian(mortality, res_comp_pre, data_comp_pre, "Combined_pre")
form_sev_pre <- formatBayesian(mortality, res_sev_pre, data_sev_pre, "Severity_pre", fixed = TRUE)
form_comp_pre <- formatBayesian(mortality, res_comp_pre, data_comp_pre, "Combined_pre")
source("R/utils.R")
reload_source()
form_comp_pre <- formatBayesian(mortality, res_comp_pre, data_comp_pre, "Combined_pre")
form_sev_pre <- formatBayesian(mortality, res_sev_pre, data_sev_pre, "Severity_pre", fixed = TRUE)
#Combining raw tables from results lists
raw_tab <- bind_rows(form_comp_pre$param, form_sev_pre$param)
View(raw_tab)
#Extracting the survival probabilities
pred1_tab <- raw_tab %>%
filter(value == "pred1") %>%
mutate(`1-Year Survival (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `1-Year Survival (95% CI)`)
#Adding formatted, ordered labels
raw_tab <- raw_tab %>%
mutate(Severity = ifelse(is.na(severity), label,
ifelse(label == "Severity_all", paste0(severity, "_all"),
ifelse(label == "Severity_us", paste0(severity, "_us"),
ifelse(label == "Severity_nonus", paste0(severity, "_nonus"),
ifelse(label == "Severity_post", paste0(severity, "_post"),
ifelse(label == "Severity_pre", paste0(severity, "_pre"),
label)))))),
Severity = factor(Severity, level = c("Minimal_all", "Moderate_all", "Advanced_all", "Combined_all",
"Minimal_us", "Moderate_us", "Advanced_us", "Combined_us",
"Minimal_nonus", "Moderate_nonus", "Advanced_nonus", "Combined_nonus",
"Minimal_post", "Moderate_post", "Advanced_post", "Combined_post",
"Minimal_pre", "Moderate_pre", "Advanced_pre", "Combined_pre",
"Sanatorium/hospital", "Non-Sanatorium"))) %>%
arrange(Severity)
arrange(Severity)
#Adding formatted, ordered labels
raw_tab <- raw_tab %>%
mutate(Severity = ifelse(is.na(severity), "Combined", severity),
Severity = factor(Severity, level = c("Minimal", "Moderate", "Advanced", "Combined"))) %>%
arrange(Severity)
#Adding formatted, ordered labels
raw_tab <- raw_tab %>%
mutate(Severity = ifelse(is.na(severity), "Combined", severity),
Severity = factor(Severity, level = c("Minimal", "Moderate",
"Advanced", "Combined"))) %>%
arrange(Severity)
#Extracting the survival probabilities
pred1_tab <- raw_tab %>%
filter(value == "pred1") %>%
mutate(`1-Year Survival (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `1-Year Survival (95% CI)`)
View(pred1_tab)
pred5_tab <- raw_tab %>%
filter(value == "pred5") %>%
mutate(`5-Year Survival (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `5-Year Survival (95% CI)`)
View(pred5_tab)
pred10_tab <- raw_tab %>%
filter(value == "pred10") %>%
mutate(`10-Year Survival (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `10-Year Survival (95% CI)`)
#Extracting the distribution parameters
sdlog <- raw_tab %>%
filter(value == "sdlog") %>%
select(label, sdlog = est)
dist_tab <- raw_tab %>%
filter(value == "meanlog") %>%
full_join(sdlog, by = "label") %>%
mutate(`Survival Distribution` = paste0("lognormal(", round(est, 2), ", ",
round(sdlog, 2), ")")) %>%
select(Severity, `Survival Distribution`)
View(sdlog)
View(dist_tab)
med_tab <- raw_tab %>%
filter(value == "median") %>%
mutate(`Median Survival Time (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `Median Survival Time (95% CI)`)
View(med_tab)
#Finding number of papers, cohorts, individual for each analysis
data_comp_pre2 <- as.data.frame(t(data_comp_pre[[2]]))
View(data_comp_pre)
data_comp_pre2$Severity
data_comp_pre2
#Finding number of papers, cohorts, individual for each analysis
data_comp_pre2 <- as.data.frame(t(data_comp_pre[[2]]))
data_comp_pre2$Severity <- "Combined_pre"
counts_comp <- data_comp_pre2
View(counts_comp)
#Counts stratified by severity for US pre-1930s subset
mortality_pre <- mortality %>% filter(severity != "Unknown",
study_id %in% c("63", "67", "90_1016"))
counts_pre <- mortality_pre %>%
group_by(severity) %>%
summarize(nStudies = length(unique(study_id)),
nCohorts = length(unique(cohort_id)),
nIndividuals = n(),
.groups = "drop") %>%
mutate(Severity = paste0(severity, "_pre"))
View(counts_pre)
counts_initial <- bind_rows(counts_pre) %>%
select(Severity, `Number of Studies` = nStudies,
`Number of Cohorts` = nCohorts,
`Number of Individuals` = nIndividuals)
View(counts_initial)
View(mortality_pre)
table(mortality_pre$study_id)
#Sarah V. Leavitt
#Boston University
#Pre-chemotherapy TB Analysis
###########################################################################################
# This program performs the mortality Bayesian meta-analysis for the US post-1930s studies
# It takes about 15 to run
###########################################################################################
options(scipen=999)
options(digits = 10)
set.seed(150183)
rm(list = ls())
source("R/utils.R")
reload_source()
source("R/mortality_functions.R")
#Reading in individual mortality data
mortality <- read.csv("data/mortality_data.csv")
#### Set-up ----------------------------------------------------------------------------------------
#Creating interval variables
#interval = 1 implies x1 < t <= x2
#dinterval() isn't working as it should so make all obs have interval = 1
#and set x2 to be 10000 (close enough to infinity) for right censored
mortality <- mortality %>%
mutate(time = ifelse(death_tb == 0, NA, interval_l),
interval = 1,
x1 = interval_l,
x2 = ifelse(death_tb == 0, 10000, interval_r))
n.iter <- 31000
n.burnin <- 1000
n.thin <- 30
# n.iter <- 100
# n.burnin <- 10
# n.thin <- 1
#### Running Models --------------------------------------------------------------------------------
#### US Studies: Complete Model ####
#Subsetting and formatting data
mortality_comp <- mortality %>%
filter(study_id %in% c("1029", "93", "45")) %>%
mutate(study_sev_num = as.numeric(factor(study_sev)),
study_id_num = as.numeric(factor(study_id)))
#Running model
output_comp <- run_comp(mortality_comp,
n.iter = n.iter, n.burnin = n.burnin, n.thin = n.thin)
#### US Studies: Stratified Model ####
#Subsetting and formatting data
mortality_sev <- mortality %>%
filter(study_id %in% c("1029", "93", "45"),
severity != "Unknown") %>%
mutate(study_sev_num = as.numeric(factor(study_sev)),
study_id_num = as.numeric(factor(study_id)),
sev_mod = as.numeric(severity == "Moderate"),
sev_adv = as.numeric(severity == "Advanced"),
sev_unk = as.numeric(severity == "Unknown"))
#Running model
output_sev <- run_sev(mortality_sev,
n.iter = n.iter, n.burnin = n.burnin, n.thin = n.thin)
#### Saving Results------------------------------------------------------------------------------
data_comp <- getData(mortality_comp)
data_sev <- getData(mortality_sev)
res_comp <- output_comp$res
res_sev <- output_sev$res
eval_comp <- output_comp$eval
eval_sev <- output_sev$eval
save(res_comp, res_sev, eval_comp, eval_sev, data_comp, data_sev,
file = "R/bayesian_severity.RData")
reload_source()
#Reading in the study_id correspondence table
studyid <- read.csv("data/study_id.csv")
#Reading in individual mortality data and analysis results
mortality <- read.csv("data/mortality_data.csv")
load('R/bayesian_severity.RData')
form_comp <- formatBayesian(mortality, res_comp_post, data_comp_post, "Combined")
form_sev <- formatBayesian(mortality, res_sev, data_sev, "Severity", fixed = TRUE)
form_comp <- formatBayesian(mortality, res_comp, data_comp, "Combined")
xyplot(eval_comp)
autocorr.plot(eval_comp)
xyplot(eval_sev)
autocorr.plot(eval_sev)
#Combining raw tables from results lists
raw_tab <- bind_rows(form_comp$param, form_sev$param)
#Adding formatted, ordered labels
raw_tab <- raw_tab %>%
mutate(Severity = ifelse(is.na(severity), "Combined", severity),
Severity = factor(Severity, level = c("Minimal", "Moderate",
"Advanced", "Combined"))) %>%
arrange(Severity)
#Extracting the survival probabilities
pred1_tab <- raw_tab %>%
filter(value == "pred1") %>%
mutate(`1-Year Survival (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `1-Year Survival (95% CI)`)
pred5_tab <- raw_tab %>%
filter(value == "pred5") %>%
mutate(`5-Year Survival (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `5-Year Survival (95% CI)`)
pred10_tab <- raw_tab %>%
filter(value == "pred10") %>%
mutate(`10-Year Survival (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `10-Year Survival (95% CI)`)
med_tab <- raw_tab %>%
filter(value == "median") %>%
mutate(`Median Survival Time (95% CI)` = paste0(round(est, 2), " (",
round(cilb, 2), ", ",
round(ciub, 2), ")")) %>%
select(Severity, `Median Survival Time (95% CI)`)
#Extracting the distribution parameters
sdlog <- raw_tab %>%
filter(value == "sdlog") %>%
select(label, sdlog = est)
dist_tab <- raw_tab %>%
filter(value == "meanlog") %>%
full_join(sdlog, by = "label") %>%
mutate(`Survival Distribution` = paste0("lognormal(", round(est, 2), ", ",
round(sdlog, 2), ")")) %>%
select(Severity, `Survival Distribution`)
#Finding number of papers, cohorts, individual for each analysis
data_comp2 <- as.data.frame(t(data_comp[[2]]))
data_comp2$Severity <- "Combined"
counts_comp <- data_comp2
#Counts stratified by severity for US pre-1930s subset
mortality <- mortality %>% filter(severity != "Unknown",
study_id %in% c("63", "67", "90_1016"))
counts <- mortality %>%
group_by(severity) %>%
summarize(nStudies = length(unique(study_id)),
nCohorts = length(unique(cohort_id)),
nIndividuals = n(),
.groups = "drop") %>%
mutate(Severity = paste0(severity, ""))
#Combining the tables
final_tab <- dist_tab %>%
full_join(pred1_tab, by = c("Severity")) %>%
full_join(pred5_tab, by = c("Severity")) %>%
full_join(pred10_tab, by = c("Severity")) %>%
full_join(med_tab, by = c("Severity")) %>%
full_join(counts, by = c("Severity"))
#Variance of frailty terms
theta <- raw_tab %>%
filter(value == "theta") %>%
mutate(theta = round(est, 2)) %>%
select(label, theta)
View(theta)
View(final_tab)
#Counts stratified by severity for US pre-1930s subset
mortality <- mortality %>% filter(severity != "Unknown",
study_id %in% c("1029", "93", "45"))
counts <- mortality %>%
group_by(severity) %>%
summarize(nStudies = length(unique(study_id)),
nCohorts = length(unique(cohort_id)),
nIndividuals = n(),
.groups = "drop") %>%
mutate(Severity = paste0(severity, ""))
#Combining the tables
final_tab <- dist_tab %>%
full_join(pred1_tab, by = c("Severity")) %>%
full_join(pred5_tab, by = c("Severity")) %>%
full_join(pred10_tab, by = c("Severity")) %>%
full_join(med_tab, by = c("Severity")) %>%
full_join(counts, by = c("Severity"))
#Variance of frailty terms
theta <- raw_tab %>%
filter(value == "theta") %>%
mutate(theta = round(est, 2)) %>%
select(label, theta)
View(final_tab)
#Counts stratified by severity for US pre-1930s subset
mortality <- mortality %>% filter(severity != "Unknown",
study_id %in% c("1029", "93", "45"))
counts <- mortality %>%
group_by(severity) %>%
summarize(nStudies = length(unique(study_id)),
nCohorts = length(unique(cohort_id)),
nIndividuals = n(),
.groups = "drop") %>%
mutate(Severity = paste0(severity, ""))
table(mortality$study_id)
#Reading in individual mortality data and analysis results
mortality <- read.csv("data/mortality_data.csv")
table(mortality$study_id)
#Counts stratified by severity for US post-1930s subset
mortality_sub <- mortality %>% filter(severity != "Unknown",
study_id %in% c("1029", "93", "45"))
counts <- mortality_sub %>%
group_by(severity) %>%
summarize(nStudies = length(unique(study_id)),
nCohorts = length(unique(cohort_id)),
nIndividuals = n(),
.groups = "drop") %>%
mutate(Severity = paste0(severity, ""))
View(counts)
#Combining the tables
final_tab <- dist_tab %>%
full_join(pred1_tab, by = c("Severity")) %>%
full_join(pred5_tab, by = c("Severity")) %>%
full_join(pred10_tab, by = c("Severity")) %>%
full_join(med_tab, by = c("Severity")) %>%
full_join(counts, by = c("Severity"))
View(final_tab)
